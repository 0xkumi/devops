pipeline {
    agent {label 'docker'}
    stages {	
        stage('Checkout') {
            steps {
                echo "Checkout version ${params.tag}"
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: "refs/tags/${params.tag}"]],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [],
                    submoduleCfg: [],
                    userRemoteConfigs: [[url: 'https://github.com/incognitochain/incognito-chain']]
                ])
            }
        }
        stage('Build') {
            agent {
                docker { 
                    image 'golang:1.12.7-stretch'
                    reuseNode true 
                }
            }
			environment {
				GOPATH="""${sh(
					returnStdout: true,
					script: 'echo `pwd`/gopath'
				)}"""
				WORKDIR="""${sh(
					returnStdout: true,
					script: 'echo `pwd`/.cache'
				)}"""
			}
            steps {
                echo "Prepare to build ..."
				sh "GOPATH=`echo -n ${PWD}/gopath` GOCACHE=`echo -n ${PWD}/.cache` CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-w' -o bin/incognito *.go"
				sh "GOPATH=`echo -n ${PWD}/gopath` GOCACHE=`echo -n ${PWD}/.cache` CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-w' -o bin/bootnode ./bootnode/*.go"
            }
        }
        stage('Push docker') {
            steps {
                sh "env"
            }
        }
    }
}