pipeline {
    agent {
        docker { 
			image 'golang:1.12.7-stretch' 
		}
    }
    stages {
        stage('Checkout') {
            steps {
                echo "Checkout version ${params.tag}"
                checkout([
                        $class: 'GitSCM',
                        branches: [[name: "refs/tags/${params.tag}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [],
                        submoduleCfg: [],
                        userRemoteConfigs: [[url: 'https://github.com/incognitochain/incognito-chain']]
                ])
            }
        }
        stage('Build') {
			environment {
				GOPATH="""${sh(
					returnStdout: true,
					script: 'echo `pwd`/gopath'
				)}"""
				WORKDIR_1="""${sh(
					returnStdout: true,
					script: 'echo `pwd`/.cache1'
				)}"""
				WORKDIR_2="""${sh(
					returnStdout: true,
					script: 'echo `pwd`/.cache2'
				)}"""
			}
            steps {
                echo "Prepare to build ..."
				sh "env GOPATH=`echo -n $GOPATH` GOCACHE=`echo -n $WORKDIR_1` CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-w' -o bin/incognito *.go"
				sh "env GOPATH=`echo -n $GOPATH` GOCACHE=`echo -n $WORKDIR_2` CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-w' -o bin/bootnode ./bootnode/*.go"
            }
        }
    }
}